// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/services/algo/type.go

// Package mock_algo is a generated GoMock package.
package mock_algo

import (
	reflect "reflect"

	models "github.com/abdybaevae/url-shortener/pkg/models"
	algo "github.com/abdybaevae/url-shortener/pkg/services/algo"
	gomock "github.com/golang/mock/gomock"
)

// MockAlgoService is a mock of AlgoService interface.
type MockAlgoService struct {
	ctrl     *gomock.Controller
	recorder *MockAlgoServiceMockRecorder
}

// MockAlgoServiceMockRecorder is the mock recorder for MockAlgoService.
type MockAlgoServiceMockRecorder struct {
	mock *MockAlgoService
}

// NewMockAlgoService creates a new mock instance.
func NewMockAlgoService(ctrl *gomock.Controller) *MockAlgoService {
	mock := &MockAlgoService{ctrl: ctrl}
	mock.recorder = &MockAlgoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlgoService) EXPECT() *MockAlgoServiceMockRecorder {
	return m.recorder
}

// Entity mocks base method.
func (m *MockAlgoService) Entity() *models.Algo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Entity")
	ret0, _ := ret[0].(*models.Algo)
	return ret0
}

// Entity indicates an expected call of Entity.
func (mr *MockAlgoServiceMockRecorder) Entity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Entity", reflect.TypeOf((*MockAlgoService)(nil).Entity))
}

// GenerateKeys mocks base method.
func (m *MockAlgoService) GenerateKeys() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateKeys")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateKeys indicates an expected call of GenerateKeys.
func (mr *MockAlgoServiceMockRecorder) GenerateKeys() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateKeys", reflect.TypeOf((*MockAlgoService)(nil).GenerateKeys))
}

// MockAlgoFactory is a mock of AlgoFactory interface.
type MockAlgoFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAlgoFactoryMockRecorder
}

// MockAlgoFactoryMockRecorder is the mock recorder for MockAlgoFactory.
type MockAlgoFactoryMockRecorder struct {
	mock *MockAlgoFactory
}

// NewMockAlgoFactory creates a new mock instance.
func NewMockAlgoFactory(ctrl *gomock.Controller) *MockAlgoFactory {
	mock := &MockAlgoFactory{ctrl: ctrl}
	mock.recorder = &MockAlgoFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlgoFactory) EXPECT() *MockAlgoFactoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockAlgoFactory) Get(strategy string) (algo.AlgoService, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", strategy)
	ret0, _ := ret[0].(algo.AlgoService)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAlgoFactoryMockRecorder) Get(strategy interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAlgoFactory)(nil).Get), strategy)
}
