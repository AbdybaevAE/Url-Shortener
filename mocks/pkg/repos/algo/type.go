// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/repos/algo/type.go

// Package mock_algo is a generated GoMock package.
package mock_algo

import (
	reflect "reflect"

	models "github.com/abdybaevae/url-shortener/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockAlgoRepo is a mock of AlgoRepo interface.
type MockAlgoRepo struct {
	ctrl     *gomock.Controller
	recorder *MockAlgoRepoMockRecorder
}

// MockAlgoRepoMockRecorder is the mock recorder for MockAlgoRepo.
type MockAlgoRepoMockRecorder struct {
	mock *MockAlgoRepo
}

// NewMockAlgoRepo creates a new mock instance.
func NewMockAlgoRepo(ctrl *gomock.Controller) *MockAlgoRepo {
	mock := &MockAlgoRepo{ctrl: ctrl}
	mock.recorder = &MockAlgoRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlgoRepo) EXPECT() *MockAlgoRepoMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockAlgoRepo) Get(name string) (*models.Algo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(*models.Algo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAlgoRepoMockRecorder) Get(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAlgoRepo)(nil).Get), name)
}
